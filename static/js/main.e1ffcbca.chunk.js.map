{"version":3,"sources":["styles/Header.styles.ts","components/Header.tsx","styles/Home.style.ts","components/Home.tsx","styles/QuestionCard.styles.ts","components/Play/QuestionCard.tsx","API/api.ts","utils/utils.ts","styles/Play.styles.ts","components/Play/Play.tsx","styles/Seetings.style.ts","components/Seetings/Seetings.jsx","images/image.jpg","styles/App.style.ts","styles/Rules.style.ts","components/Rules/Rules.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","Header","className","to","Home","ButtonWrapper","correct","userClicked","QuestionCard","question","answers","callback","userAnswers","questionNumber","totalQuestions","dangerouslySetInnerHTML","__html","map","answer","correctAnswer","disabled","value","onClick","fetchQuizQuestions","amount","difficulty","a","endpoint","fetch","json","data","results","arr","incorrect_answers","correct_answer","sort","Math","random","Play","Number","localStorage","getItem","useState","isLoading","setIsLoading","questions","setQuestions","number","setNumber","setUserAnswers","score","setScore","gameOver","setGameOver","start","newQuestions","length","undefined","e","currentTarget","isCorrect","prev","answerObject","nextNum","numbers","difficult","Seetings","numRef","useRef","difRef","visibleNumber","setVisibleNumber","activeNumber","setActiveNumber","visibleDifficulty","setVisibleDifficulty","activeDifficulty","setActiveDifficulty","outSideClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","width","height","viewBox","fill","xmlns","d","el","i","changeActiveNumber","changeActiveDifficulty","setItem","GlobalStyle","createGlobalStyle","image","Rules","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1ffcbca.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n.goBack {\n    cursor: pointer;\n    background: linear-gradient(180deg, #fff, #695d5d);\n    border: 2px solid #695d5d;\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n}\na {\n    text-decoration: none;\n    color: black;\n}\n    h1 {\n        font-family: Fascinate Inline;\n    background-image: linear-gradient(180deg, #fff, #695d5d);\n    font-weight: 400;\n    background-size: 100%;\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -moz-background-clip: text;\n    -moz-text-fill-color: transparent;\n    filter: drop-shadow(2px 2px #211e1e);\n    font-size: 70px;\n    text-align: center;\n    margin: 20px;\n    }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Wrapper } from './../styles/Header.styles';\n\nconst Header = () => {\n    return (\n        <Wrapper>\n            <div className=\"header\">\n                <button className='goBack'>\n                    <Link to='/'>â¬…</Link>\n                </button>\n                <h1>ERUDITION QUIZ</h1>\n            </div>\n        </Wrapper>\n    )\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    >p {\n        color: #fff;\n    }\n\n    .play, .rules, .seetings {\n        cursor: pointer;\n        background: linear-gradient(180deg, #fff, #695d5d);\n        border: 2px solid #695d5d;\n        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n        margin: 20px 0;\n        padding: 0 40px;\n        max-width: 200px;\n    }\n    \n    a {\n        text-decoration: none;\n        color: black;\n    }\n`;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Wrapper } from './../styles/Home.style'\n\nconst Home = () => {\n    return (\n\n            <Wrapper>\n                <button className='play'>\n                    <Link className='play-button' to='/play'>PLAY</Link>\n                </button>\n                \n                    <button className='rules'>\n                        <Link  to='/rules'>RULES</Link>\n                    </button>\n                    <button className='seetings' >\n                        <Link to='/seetings'>SEETINGS</Link>\n                    </button>\n                \n                </Wrapper>\n    )\n}\n\nexport default Home\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    max-width: 1100px;\n    background: #ebfeff;\n    border-radius: 10px;\n    border: 2px solid #00633f;\n    padding: 20px;\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n    text-align: center;\n\n    p {\n        font-size: 1rem;\n    }\n`;\n\ntype ButtonWrapperProps = {\n    correct: boolean;\n    userClicked: boolean;\n}\n\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\n    transition: all 0.3s ease;\n\n    :hover {\n        opacity: 0.8;\n    }\n\n    button {\n        cursor: pointer;\n        user-select: none;\n        font-size: 0.8rem;\n        width: 100%;\n        height: 40px;\n        margin: 5px 0;\n        background: ${({ correct, userClicked }) =>\n          correct\n            ? 'linear-gradient(90deg, #56FFA4, #59BC86)'\n            : !correct && userClicked\n            ? 'linear-gradient(90deg, #FF5656, #C16868)'\n            : 'linear-gradient(90deg, #8cc2b3, #6eb4a1)'};\n        border: 3px solid #ffffff;\n        box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\n        border-radius: 10px;\n        color: #fff;\n        text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\n    }\n`","import React from 'react';\nimport { AnswerObject } from './Play';\nimport { Wrapper, ButtonWrapper } from './../../styles/QuestionCard.styles';\n\ntype Props = {\n    question: string;\n    answers: string[];\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\n    userAnswers: AnswerObject | undefined;\n    questionNumber: number;\n    totalQuestions: number;\n}\n\nconst QuestionCard: React.FC<Props> = ({\n    question,\n    answers,\n    callback,\n    userAnswers,\n    questionNumber,\n    totalQuestions\n}) => {\n    return (\n        <Wrapper>\n            <p className='number'>\n                Question: {questionNumber} / {totalQuestions}\n            </p>\n            <p dangerouslySetInnerHTML={{ __html: question }} />\n            <div>\n                {answers.map(answer => {\n                    return (\n                        <ButtonWrapper key={answer} correct={userAnswers?.correctAnswer === answer}\n                            userClicked={userAnswers?.answer === answer}>\n                            <button disabled={!!userAnswers} value={answer} onClick={callback}>\n                                <span dangerouslySetInnerHTML={{ __html: answer }} />\n                            </button>\n                        </ButtonWrapper>\n                    )\n                })}\n            </div>\n        </Wrapper>\n    )\n}\n\nexport default QuestionCard;","import {shuffleArray} from './../utils/utils';\n\nexport type Question = {\n    category: string;\n    correct_answer: string;\n    difficulty: string;\n    incorrect_answers: string[];\n    question: string;\n    type: string;\n}\n\nexport type QuestionState = Question & { answers: string[] };\n\n\nexport const fetchQuizQuestions = async (amount: number, difficulty: string) => {\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`\n    const data = await (await fetch(endpoint)).json();\n    return data.results.map((question: Question) => {\n        return ({\n            ...question,\n            answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n        })\n    })\n}","export const shuffleArray = (arr: any[]) => {\n    return [...arr].sort(() => Math.random() - 0.5);\n}","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    >p {\n        color: #fff;\n    }\n\n    .score {\n        color: #fff;\n        font-size: 2rem;\n        margin: 0;\n    }\n\n\n    .start, .next {\n        cursor: pointer;\n        background: linear-gradient(180deg, #fff, #695d5d);\n        border: 2px solid #695d5d;\n        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n        margin: 20px 0;\n        padding: 0 40px;\n    }\n\n    .start {\n        max-width: 200px;\n    }\n`;","import React, { useState } from 'react';\nimport QuestionCard from './QuestionCard';\nimport { fetchQuizQuestions, QuestionState} from './../../API/api';\nimport { Wrapper } from '../../styles/Play.styles';\n\nexport type AnswerObject = {\n    question: string;\n    answer: string;\n    isCorrect: boolean;\n    correctAnswer: string;\n}\n\nconst Play: React.FC = () => {\n    const totalQuestions = Number(localStorage.getItem('number')) || 10;\n    const difficulty = localStorage.getItem('difficulty') || 'easy';\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [questions, setQuestions] = useState<QuestionState[]>([]);\n    const [number, setNumber] = useState(0);\n    const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n    const [score, setScore] = useState(0);\n    const [gameOver, setGameOver] = useState(true);\n\n\n\n    const start = async () => {\n        setIsLoading(true);\n        setGameOver(false);\n\n        const newQuestions = await fetchQuizQuestions(totalQuestions, difficulty);\n        setQuestions(newQuestions);\n        setScore(0);\n        setUserAnswers([]);\n        setNumber(0);\n        setIsLoading(false);\n    }\n\n    const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (!gameOver) {\n            const answer = e.currentTarget.value;\n            const isCorrect = questions[number].correct_answer === answer;\n            if (isCorrect) setScore(prev => prev + 100);\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                isCorrect,\n                correctAnswer: questions[number].correct_answer\n            }\n            setUserAnswers(prev => [...prev, answerObject]);\n        }\n    }\n\n    const nextQuestion = () => {\n        const nextNum = number + 1;\n        if (nextNum === totalQuestions) {\n            setGameOver(true);\n        } else {\n            setNumber(nextNum);\n        }\n    }\n    return (\n\n            <Wrapper>\n                \n                {gameOver || userAnswers.length === totalQuestions ? (\n                    <button className='start' onClick={start}>\n                        START\n                    </button>\n                ) : null}\n                {!gameOver && <p className='score'>Score: {score}/{totalQuestions * 100}</p>}\n                {isLoading && <p>Loading Questions ...</p>}\n\n\n\n                {!isLoading && !gameOver && <QuestionCard questionNumber={number + 1} totalQuestions={totalQuestions}\n                    question={questions[number].question} answers={questions[number].answers}\n                    userAnswers={userAnswers ? userAnswers[number] : undefined} callback={checkAnswer} />}\n                {!gameOver && !isLoading && userAnswers.length === number + 1 && number !== totalQuestions - 1 && (\n                    <button className='next' onClick={nextQuestion}>NEXT QUESTION</button>\n                )}\n\n            </Wrapper>\n       \n    )\n}\n\nexport default Play;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\n    font-size: 15px;\n    max-width: 1000px;\n    background: #ebfeff;\n    border-radius: 10px;\n    border: 2px solid #00633f;\n    padding: 20px;\n    box-shadow: 0px 5px 10px rgb(0 0 0 / 25%);\n    text-align: center;\n\n    .save {\n      position: relative;\n      top: 20px;\n      cursor: pointer;\n      background: linear-gradient(180deg, #fff, #695d5d);\n      border: 2px solid #695d5d;\n      box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n      margin: 20px 0;\n      padding: 0 40px;\n  }\n\n.sort {\n    margin-left: 20px;\n    position: relative;\n    &__label {\n      display: flex;\n      align-items: center;\n  \n      svg {\n        margin-right: 8px;\n        transform: rotate(180deg);\n  \n        &.rotated {\n          transform: rotate(0);\n        }\n      }\n  \n      b {\n        margin-right: 8px;\n      }\n  \n      span {\n        color: $orange;\n        border-bottom: 1px dashed $orange;\n        cursor: pointer;\n      }\n    }\n  \n    &__popup {\n      position: absolute;\n      right: 0;\n      margin-top: 15px;\n      background: #ffffff;\n      box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.09);\n      border-radius: 10px;\n      overflow: hidden;\n      padding: 10px 0;\n      width: 160px;\n  \n      ul {\n        overflow: hidden;\n        li {\n          padding: 12px 20px;\n          cursor: pointer;\n  \n          &.active,\n          &:hover {\n            background: rgba(254, 95, 30, 0.05);\n          }\n  \n          &.active {\n            font-weight: bold;\n            color: $orange;\n          }\n        }\n      }\n    }\n  }\n`;","import React, { useEffect, useRef, useState } from 'react';\nimport { Wrapper } from '../../styles/Seetings.style';\n\nconst numbers = [5, 10, 15, 20];\nconst difficult = ['easy', 'medium', 'hard'];\n\nconst Seetings = () => {\n    const numRef = useRef(null);\n    const difRef = useRef(null);\n\n    const [visibleNumber, setVisibleNumber] = useState(false);\n    const [activeNumber, setActiveNumber] = useState(10);\n    \n    const [visibleDifficulty, setVisibleDifficulty] = useState(false);\n    const [activeDifficulty, setActiveDifficulty] = useState('easy');\n\n    const outSideClick = (e) => {\n        if ((numRef.current && !numRef.current.contains(e.target)) && (difRef.current && !difRef.current.contains(e.target))) {\n            setVisibleNumber(false);\n            setVisibleDifficulty(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', outSideClick, true);\n        return () => {\n            document.removeEventListener('click', outSideClick, true);\n        };\n    });\n\n    useEffect(() => {\n        setActiveNumber(localStorage.getItem('number') || 10);\n        setActiveDifficulty(localStorage.getItem('difficulty') || 'easy')\n    }, []);\n\n    const toggleVisibleNumber = () => {\n        setVisibleNumber(prev => !prev)\n    }\n    const changeActiveNumber = (el) => {\n        setActiveNumber(el);\n        setVisibleNumber(false);\n    }\n    const toggleVisibleDifficulty = () => {\n        setVisibleDifficulty(prev => !prev)\n    }\n    const changeActiveDifficulty = (el) => {\n        setActiveDifficulty(el);\n        setVisibleDifficulty(false);\n    }\n    const saveParams = () => {\n        localStorage.setItem('number', activeNumber);\n        localStorage.setItem('difficulty', activeDifficulty);\n        setVisibleNumber(false);\n        setVisibleDifficulty(false);\n    }\n    return (\n        <Wrapper>\n            <div ref={numRef} className=\"sort\">\n                <div className=\"sort__label\">\n                    <svg\n                        className={visibleNumber ? 'rotated' : ''}\n                        width=\"10\"\n                        height=\"6\"\n                        viewBox=\"0 0 10 6\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                            fill=\"#2C2C2C\"\n                        />\n                    </svg>\n                    <b>Choose the number of questions:</b>\n                    <span onClick={() => toggleVisibleNumber()}>{activeNumber}</span>\n                    {visibleNumber &&\n                        (<div className=\"sort__popup\">\n                            <ul>\n                                {numbers && numbers.map((el, i) => {\n                                    return <li key={i} onClick={() => changeActiveNumber(el)}>{el}</li>\n                                })}\n                            </ul>\n                        </div>\n                        )}</div>\n            </div>\n\n            <div ref={difRef} className=\"sort\">\n                <div className=\"sort__label\">\n                    <svg\n                        className={visibleDifficulty ? 'rotated' : ''}\n                        width=\"10\"\n                        height=\"6\"\n                        viewBox=\"0 0 10 6\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                            fill=\"#2C2C2C\"\n                        />\n                    </svg>\n                    <b>Choose the difficulty:</b>\n                    <span onClick={() => toggleVisibleDifficulty()}>{activeDifficulty}</span>\n                    {visibleDifficulty &&\n                        (<div className=\"sort__popup\">\n                            <ul>\n                                {difficult && difficult.map((el, i) => {\n                                    return <li key={i} onClick={() => changeActiveDifficulty(el)}>{el}</li>\n                                })}\n                            </ul>\n                        </div>\n                        )}\n                </div>\n            </div>\n            <button className='save' onClick={saveParams}>\n                SAVE\n                    </button>\n        </Wrapper>\n    )\n}\n\nexport default Seetings;","export default __webpack_public_path__ + \"static/media/image.4669c09e.jpg\";","import styled, {createGlobalStyle} from 'styled-components';\nimport image from './../images/image.jpg'\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        height: 100%;\n    }\n\n    body {\n        background-image: url(${image});\n        background-size: cover;\n        margin: 0;\n        padding: 0 20px;\n        display: flex;\n        justify-content: center\n    }\n    * {\n        box-sizing: border-box;\n        font-family: 'Catamaran', sans-serif;\n    }\n`;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    font-size: 15px;\n    max-width: 1000px;\n    background: #ebfeff;\n    border-radius: 10px;\n    border: 2px solid #00633f;\n    padding: 20px;\n    box-shadow: 0px 5px 10px rgb(0 0 0 / 25%);\n    text-align: center;\n`;","import React from 'react';\nimport { Wrapper } from './../../styles/Rules.style';\n\nconst Rules = () => {\n    return (\n        <Wrapper>\n            <p>\n                You have a question and 4 possible answers. If you answer incorrectly,\n                the answer will be highlighted in red. If correctly, it will be highlighted in green\n                and you will receive 100 points. The more points you get, the smarter you are.\n            </p>\n            <p>\n                You also have the ability to change the number and difficulty of questions in\n                the settings. Good luck!\n            </p>\n\n\n\n        </Wrapper>\n    )\n}\n\nexport default Rules;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Play from './components/Play/Play';\nimport Seetings from './components/Seetings/Seetings.jsx';\nimport {GlobalStyle} from './styles/App.style';\nimport Rules from './components/Rules/Rules';\n\nconst App: React.FC = () => {\n  return (\n    <>\n    <GlobalStyle />\n    <HashRouter>\n      <Header />\n      <Route path='/' component={Home} exact />\n      <Route path='/play' component={Play} exact />\n      <Route path='/rules' component={Rules} exact />\n      <Route path='/seetings' component={Seetings} exact />\n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}